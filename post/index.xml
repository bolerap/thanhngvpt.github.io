<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on David&#39;s Notepad</title>
    <link>https://thanhngvpt.github.io/post/index.xml</link>
    <description>Recent content in Posts on David&#39;s Notepad</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 12 Dec 2016 11:26:54 +0700</lastBuildDate>
    <atom:link href="https://thanhngvpt.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Channels in golang</title>
      <link>https://thanhngvpt.github.io/post/go/channels/</link>
      <pubDate>Mon, 12 Dec 2016 11:26:54 +0700</pubDate>
      
      <guid>https://thanhngvpt.github.io/post/go/channels/</guid>
      <description>&lt;p&gt;This post introduce about channels in golang, a powerful feature
This for testing&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>createClass vs Component in React</title>
      <link>https://thanhngvpt.github.io/post/react/create-class-vs-component/</link>
      <pubDate>Thu, 20 Oct 2016 15:55:47 +0700</pubDate>
      
      <guid>https://thanhngvpt.github.io/post/react/create-class-vs-component/</guid>
      <description>&lt;p&gt;Để tạo một react component ta có thể dùng cú pháp&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// cách 1
const = react.createClass({
    getInitialState() {
        return {name: &#39;David&#39;}
    },

    propTypes: {},

    getDefaultProps() {
        return {}
    },

    handleClick() {
        console.log(this);
    },

    render() {
        return (
            &amp;lt;div&amp;gt;
                &amp;lt;h1&amp;gt;Hello, {this.state.name}&amp;lt;/h1&amp;gt;
            &amp;lt;/div&amp;gt;
        );
    }
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;hoặc&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// cách 2
class Comment extends React.Component {
    constructor(props) {
        super(props);
        this.state = {
            name: &#39;David&#39;
        };
        this.handleClick = this.handleClick.bind(this);
    }

    handleClick() {
        console.log(this);
    }

    render() {
        return (
            &amp;lt;div&amp;gt;
                &amp;lt;h1&amp;gt;Hello, {this.state.name}&amp;lt;/h1&amp;gt;
            &amp;lt;/div&amp;gt;
        );
    }
}

Comment.propTypes = {};
Comment.defaultProps = {};
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Về bản chất hai cú pháp đều thực hiện công việc giống nhau, cách 1 sử dụng cú pháp ES5 cách 2 sử dụng cú pháp ES6. Vài điểm khác nhau giữa 2 cách như sau:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;initState: cách 1 dùng function getInitialState(), cách 2 set object trong constructor.&lt;/li&gt;
&lt;li&gt;defaultProps: cách 1 là sử dụng function getDefaultProps(), cách 2 set object defaultProps.&lt;/li&gt;
&lt;li&gt;handler Event: cách 1 tự động bind vào component khi gọi, cách 2 phải bind manual hoặc bind trong constructor.&lt;/li&gt;
&lt;li&gt;mixin: cách 1 hỗ trợ, cách 2 không hỗ trợ&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Python tricks</title>
      <link>https://thanhngvpt.github.io/post/python/python-tricks/</link>
      <pubDate>Thu, 20 Oct 2016 14:57:11 +0700</pubDate>
      
      <guid>https://thanhngvpt.github.io/post/python/python-tricks/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Unpacking&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;#1
a, b, c = 1, 2, 3
d = a, b, c
print(d, type(d)) # (1, 2, 3) - tuple
#2
a, b, c = (2 * i + 1 for i in range(3))
d = a, b, c
print(d) # (1, 3, 5)
#3
a, (b, c), d = [1, (2, 3), 5]
print(a, b, c, d) # 1 2 3 5
#4 - swapping variables
a, b = 1, 2
a, b = b, a
print(a, b) # 2 1
#5
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>ES6 features</title>
      <link>https://thanhngvpt.github.io/post/es/es6-features/</link>
      <pubDate>Thu, 20 Oct 2016 14:38:05 +0700</pubDate>
      
      <guid>https://thanhngvpt.github.io/post/es/es6-features/</guid>
      <description>&lt;p&gt;Lorem ipsum dolor sit amet, consectetur adipisicing elit. Ducimus excepturi dignissimos perspiciatis magnam provident molestias voluptatem enim, blanditiis voluptate voluptas. Atque, natus? Id assumenda, corporis recusandae perferendis, quidem at tempora!&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>