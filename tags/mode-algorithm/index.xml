<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>David&#39;s Notepad </title>
    <link>https://thanhngvpt.github.io/tags/mode-algorithm/index.xml</link>
    <language>en-us</language>
    <author>thanhngvpt</author>
    <rights>(C) 2016</rights>
    <updated>0001-01-01 00:00:00 &#43;0000 UTC</updated>

    
      
        <item>
          <title>Mode algorithm</title>
          <link>https://thanhngvpt.github.io/post/go/mode-algorithm/</link>
          <pubDate>Fri, 21 Oct 2016 14:15:20 ICT</pubDate>
          <author>thanhngvpt</author>
          <guid>https://thanhngvpt.github.io/post/go/mode-algorithm/</guid>
          <description>&lt;p&gt;Mode algorithm là thuật toán được sử dụng để tìm ra phần tử lặp lại nhiều nhất trong một array. Source dưới đây cài đặt cho thuật toán tìm mode của 1 array sử dụng ngôn ngữ Go.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;// sử dụng slice
function sliceMode(input []int) int {
    count := make([]input, len(input))
    maxValue := 0
    maxKey := 0
    for i := range input {
        count[input[i]]++
        if count[input[i]] &amp;gt; maxValue {
            maxValue = count[input[i]]
            maxKey = input[i]
        }
    }

    return maxKey
}

// sử dụng map
function mapMode([]input) int {
    count := make(map[int]int)
    maxValue, maxKey := 0, 0
    for i := range input {
        count[input[i]]++
        if count[input[i]] &amp;gt; maxValue {
            maxValue = count[input[i]]
            maxKey = input[i]
        }
    }

    return maxKey
}
&lt;/code&gt;&lt;/pre&gt;
</description>
        </item>
      
    

  </channel>
</rss>
